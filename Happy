local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AdminPanel"

-- Frame
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 250, 0, 150)
frame.Position = UDim2.new(0.5, -125, 0.5, -75)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.Active = true
frame.Draggable = true

-- Close button
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 50, 0, 25)
closeBtn.Position = UDim2.new(1, -55, 0, 5)
closeBtn.Text = "X"
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Minimize button
local minBtn = Instance.new("TextButton", frame)
minBtn.Size = UDim2.new(0, 50, 0, 25)
minBtn.Position = UDim2.new(1, -110, 0, 5)
minBtn.Text = "-"
local minimized = false
minBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _, child in ipairs(frame:GetChildren()) do
        if child:IsA("GuiObject") and child ~= closeBtn and child ~= minBtn then
            child.Visible = not minimized
        end
    end
end)

-- Fly variables
local flying = false
local flySpeed = 50
local bodyGyro, bodyVelocity

-- Fly toggle button
local flyBtn = Instance.new("TextButton", frame)
flyBtn.Size = UDim2.new(0, 100, 0, 30)
flyBtn.Position = UDim2.new(0, 10, 0, 40)
flyBtn.Text = "Fly: OFF"

local function startFly()
    if flying then return end
    flying = true
    flyBtn.Text = "Fly: ON"

    bodyGyro = Instance.new("BodyGyro", rootPart)
    bodyGyro.P = 9e4
    bodyGyro.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
    bodyGyro.CFrame = rootPart.CFrame

    bodyVelocity = Instance.new("BodyVelocity", rootPart)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(9e4, 9e4, 9e4)

    RunService:BindToRenderStep("FlyControl", Enum.RenderPriority.Character.Value, function()
        local moveDirection = Vector3.new()
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + workspace.CurrentCamera.CFrame.RightVector
        end

        if moveDirection.Magnitude > 0 then
            moveDirection = moveDirection.Unit
            bodyVelocity.Velocity = moveDirection * flySpeed
            bodyGyro.CFrame = workspace.CurrentCamera.CFrame
        else
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        end
    end)
end

local function stopFly()
    if not flying then return end
    flying = false
    flyBtn.Text = "Fly: OFF"
    RunService:UnbindFromRenderStep("FlyControl")
    if bodyGyro then
        bodyGyro:Destroy()
        bodyGyro = nil
    end
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
end

flyBtn.MouseButton1Click:Connect(function()
    if flying then
        stopFly()
    else
        startFly()
    end
end)
